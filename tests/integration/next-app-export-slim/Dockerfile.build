FROM alpine:3 AS install-base
WORKDIR /var/task
RUN apk update && apk add --no-cache npm && rm -rf /var/cache/apk/*
RUN npm install -g serve@14 --omit=dev --omit=optional --omit=peer && npm cache clean --force

FROM node:22-alpine AS install-next
WORKDIR /var/task
COPY . /var/task/
RUN npm install

FROM install-base AS build-base
WORKDIR /var/task
ENV PATH="/var/task:$PATH"
ENV PATH="/var/task/node_modules/.bin:$PATH"
ENV URL="https://q5mrlmcwmwl6qhijqtux2pxszi0jwzlv.lambda-url.us-east-1.on.aws"
COPY . /var/task/

FROM install-next AS build-next
WORKDIR /var/task
ENV PATH="/var/task:$PATH"
ENV PATH="/var/task/node_modules/.bin:$PATH"
ENV URL="https://q5mrlmcwmwl6qhijqtux2pxszi0jwzlv.lambda-url.us-east-1.on.aws"
COPY . /var/task/
RUN next build

FROM install-base AS package-base
WORKDIR /var/task
ENV PATH="/var/task:$PATH"
ENV PATH="/var/task/node_modules/.bin:$PATH"

FROM install-next AS package-next
WORKDIR /var/task
ENV PATH="/var/task:$PATH"
ENV PATH="/var/task/node_modules/.bin:$PATH"
COPY --from=build-next /var/task/package.json /var/task/package.json
COPY --from=build-next /var/task/out* /var/task/out

FROM install-base AS runtime
WORKDIR /var/task
ENV PATH="/var/task:$PATH"
ENV PATH="/var/task/node_modules/.bin:$PATH"
COPY --from=package-next /var/task/package.json /var/task/package.json
COPY --from=package-next /var/task/out /var/task/out
COPY --from=scaffoldly/scaffoldly:1 /linux/arm64/awslambda-entrypoint /var/task/.entrypoint
CMD [ "( serve out )" ]