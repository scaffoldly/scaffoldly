name: Push to Main

on:
  workflow_dispatch:
  push:
    branches: [main]

permissions: write-all

jobs:
  prerelease:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # node: ['18', '20', '22']
        node: ['22']
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'yarn'
      - run: yarn
      - run: yarn build
      - if: ${{ matrix.node == '22' }}
        uses: scaffoldly/bump-version-action@v1
        with:
          action: prerelease
          version-file: package.json
          repo-token: ${{ secrets.GITHUB_TOKEN }}

  deploy-docker:
    runs-on: ubuntu-latest
    needs: prerelease
    steps:
      - uses: actions/checkout@v4
        with:
          ref: main # checkout the newly pushed code
      - name: Parse package.json
        id: package
        run: |
          echo ::set-output name=name::$(jq -r '.name' package.json)
          echo ::set-output name=version::$(jq -r '.version' package.json)
          echo ::set-output name=major::$(jq -r '.version' package.json | cut -d '.' -f 1)
          echo ::set-output name=minor::$(jq -r '.version' package.json | cut -d '.' -f 2)
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ vars.DOCKERHUB_USERNAME }}/${{ steps.package.outputs.name }}
          # TODO: move major semver to release-published
          # TODO: publish to github packages
          # TODO: upload artifacts to github
          tags: |
            type=raw,value=${{ steps.package.outputs.version }},enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=raw,value=${{ steps.package.outputs.major }},enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=raw,value=${{ steps.package.outputs.major }}.${{ steps.package.outputs.minor }},enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=raw,value=${{ steps.package.outputs.version }}-{{date 'YYYYMMDD'}},enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=raw,value=${{ steps.package.outputs.version }}-${{ github.sha }}
          labels: |
            maintainer=Scaffoldly <docker@scaffold.ly>
      - uses: docker/build-push-action@v6
        with:
          file: scripts/Dockerfile
          context: .
          platforms: linux/amd64,linux/arm64
          pull: true
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=${{ runner.os }}-${{ steps.name.outputs.name }}
          cache-to: type=gha,scope=${{ runner.os }}-${{ steps.name.outputs.name }},mode=max

  deploy-website:
    runs-on: ubuntu-latest
    needs: deploy-docker
    env:
      AWS_ROLE_ARN: ${{ vars.AWS_ROLE_ARN }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: packages/website/package-lock.json

      - run: npm install
        working-directory: packages/website

      - uses: scaffoldly/scaffoldly@main
        with:
          working-directory: packages/website
          secrets: ${{ toJSON(secrets) }}
